services:
  # Nuxt PWA Application
  pwa:
    build:
      context: ./pwa/
      # dockerfile: Dockerfile # assuming a custom Dockerfile for the Nuxt app in the root
    # ports:
    #   - "3000:3000" # Exposes Nuxt app on port 3000
    depends_on:
      - mysql
      - minio
    # environment:
    #   MYSQL_HOST: mysql
    #   MYSQL_PORT: 3306
    #   MINIO_HOST: minio
    #   MINIO_PORT: 9000

  # Spring Boot API Application
  api:
    build:
      context: ./api/
      # dockerfile: Dockerfile # assuming a custom Dockerfile for Spring Boot API in the root
    # ports:
    #   - "8080:8080" # Exposes Spring Boot app on port 8080
    depends_on:
      - mysql
      - minio
    # environment:
    #   MYSQL_HOST: mysql
    #   MYSQL_PORT: 40101
    #   MINIO_HOST: minio
    #   MINIO_PORT: 9000

  # MySQL Database
  mysql:
    image: mysql:8.3
    environment:
      MYSQL_ROOT_PASSWORD: test1234 # change to a strong password
      MYSQL_DATABASE: volo_db # the database name
      # MYSQL_USER: volodb_user
      # MYSQL_PASSWORD: demodemo # change to a secure password
    ports:
      - "40101:3306"
    volumes:
      - ~/mysql/volodb:/var/lib/mysql
    # networks:
    #   - volodb_network

  # MinIO Object Storage
  minio:
    image: minio/minio:RELEASE.2025-02-18T16-25-55Z
    environment:
      MINIO_ROOT_USER: volodb
      MINIO_ROOT_PASSWORD: test1234
      #MINIO_ACCESS_KEY: minioadmin # change to your desired access key
      #MINIO_SECRET_KEY: minioadmin # change to your desired secret key
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # Exposes MinIO on port 9000
      - "9001:9001" # Exposes MinIO on port 9001
    volumes:
      - ~/minio/volodb/data:/data
    # networks:
    #   - volodb_network
    depends_on:
      - mysql

  # Caddy Reverse Proxy with SSL
  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile # Customize your Caddyfile for domain and reverse proxy
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - pwa
      - api
    # networks:
    #   - volodb_network

volumes:
  caddy_data:
  caddy_config:
# networks:
#   volodb_network:
#     name: volodb_network
